{"version":3,"sources":["redux/profile-reducer.js","redux/dialogs-reducer.js","components/Users/Users.module.css","assets/images/userAvatar.jpg","assets/images/preloader.svg","components/common/Paginator/Paginator.module.css","components/Login/Login.module.css","components/Navbar/Navbar.module.css","components/Users/User/User.module.css","api/api.js","serviceWorker.js","components/Navbar/Sidebar/FriendItem/FriendItem.jsx","components/Navbar/Sidebar/Sidebar.jsx","components/Navbar/Sidebar/SidebarContainer.jsx","components/Navbar/Navbar.jsx","redux/header-reducer.js","redux/app-reducer.js","utils/reducers-helper.js","redux/users-reducer.js","redux/users-selectors.js","components/Users/User/User.jsx","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.jsx","App.js","index.js","components/common/Preloader/Preloader.jsx","components/common/FormsControls/FormsControls.module.css","utils/validators/validator.js","components/common/FormsControls/FormsControls.js","components/Header/Header.module.css","components/Navbar/Sidebar/Sidebar.module.css","components/Navbar/Sidebar/FriendItem/FriendItem.module.css"],"names":["ADD_POST","initialState","posts","id","message","likeCount","activeProfile","status","addPost","postText","type","setUserStatus","getUserProfileInfo","userId","dispatch","a","dataAPI","getUserProfile","response","userProfile","getUserStatus","profileAPI","updateUserStatus","profileReducer","state","action","newPost","newPostText","filter","item","postId","dialogs","name","messages","addMessage","messageBody","newMessageText","dialogsReducer","newMessage","module","exports","instance","axios","create","withCredentials","baseURL","headers","getUsers","pageNumber","usersCount","get","then","data","getUsersPage","follow","post","unfollow","delete","userID","put","authAPI","auth","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","FriendItem","props","className","s","friend_item","avatar","alt","src","to","Sidebar","friendsElements","friends","map","friend","sidebar_block","friends_block","SidebarContainer","connect","sidebar","Navbar","nav","activeClassName","activeLink","settings","isLogined","setUserData","isAuth","payload","getAuthUserData","resultCode","headerReducer","initialized","appReducer","followUnfollow","users","followOrUnfollow","user","followed","FOLLOW","totalUsersCount","isFetching","isFollowingProc","followSuccess","unfollowSuccess","set_users_count","toggle_is_fetching","toggle_following_proc","usersReducer","page","usersPage","getPageNumber","getUsersCount","getTotalUsersCount","getIsFetching","getIsFollowingProc","User","userPrep","user_block","userFirst","userAvatar","photos","small","userAvartar","disabled","some","onClick","btn","user__info","user__info_left","user__name","surname","user__status","user__info_right","user__country","user__city","Paginator","totalItemsCount","itemsCountOnPage","countOfPagesOnPage","pageChanged","countOfPages","Math","ceil","useState","pagesBlock","setPagesBlock","lastPageNumber","firstPageNumber","pages","Array","fill","_","index","slice","u","activePage","Users","listOfUsers","key","user_list","UsersContainerAPI","this","Preloader","React","Component","items","totalCount","Header","header","logining","HeaderContainer","maxLength25","maxLengthCreator","ReduxLoginForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","requiredField","component","Input","error","style","incorectData","errorText","stopSubmit","_error","values","sidebarReducer","reducers","combineReducers","profilePage","dialogsPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddlewayer","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initialize","path","render","exact","UsersContainer","AppWithConnect","promise","Promise","all","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","preloader","value","undefined","count","length","Textarea","input","meta","hasError","touched","formControll"],"mappings":"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","file":"static/js/main.ebac8e38.chunk.js","sourcesContent":["import {dataAPI, profileAPI} from './../api/api';\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst DELETE_POST = 'profile/DELETE-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'profile/GET_USER_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hello everyone!', likeCount: 15},\r\n        {id: 2, message: 'I can swimming!!!', likeCount: 20},\r\n        {id: 3, message: 'I am happy!!!', likeCount: 18},\r\n        {id: 4, message: 'I like travelling!!!', likeCount: 35},\r\n        {id: 5, message: 'I like travelling!!!!!!!!!!!!!!!!!', likeCount: 30},\r\n        {id: 5, message: 'I like travelling!!!!!!!!!!!!!!!!!', likeCount: 31},\r\n        {id: 10, message: 'I likkkk kkkkkkk', likeCount: 1},\r\n    ],\r\n\r\n    activeProfile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.postText,\r\n                likeCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(item => item.id !== action.postId)\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                activeProfile: action.userProfile,\r\n            };\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (postText) => {\r\n    return {type: ADD_POST, postText};\r\n};\r\n\r\nexport const deletePost = (postId) => {\r\n    return {type: DELETE_POST, postId};\r\n};\r\n\r\nexport const setUserProfile = (userProfile) => {\r\n    return {type: SET_USER_PROFILE, userProfile};\r\n};\r\n\r\nexport const setUserStatus = (status) => {\r\n    return {type: SET_USER_STATUS, status};\r\n};\r\n\r\n//////////////////////////////////////////////////////\r\n\r\n// отримати інформацію про користувача\r\nexport const getUserProfileInfo = (userId) => async (dispatch) => {\r\n    let response = await dataAPI.getUserProfile(userId);\r\n    dispatch(setUserProfile(response));\r\n\r\n};\r\n\r\n// отримати статус користувача\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getUserStatus(userId)\r\n    dispatch(setUserStatus(response));\r\n};\r\n\r\n// оновити статус користувача (авторизованого)\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateUserStatus(status);\r\n    if (response === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\n","const ADD_MESSAGE = 'dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Tom' },\r\n        { id: 2, name: 'Sergy' },\r\n        { id: 3, name: 'Andre' },\r\n        { id: 4, name: 'Ric' },\r\n        { id: 5, name: 'Sofa' },\r\n        { id: 6, name: 'Sofa' },\r\n        { id: 7, name: 'Sof' },\r\n        { id: 8, name: 'Sofic' }\r\n    ],\r\n\r\n    messages: [\r\n        { id: 1, message: 'hi' },\r\n        { id: 2, message: 'How are you ?' },\r\n        { id: 3, message: 'How are you ?' },\r\n        { id: 4, message: 'How are you ?' }\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      \r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: 5,\r\n                message: action.newMessageText\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n                newMessageText: ''\r\n            }\r\n        }\r\n        default : return state;\r\n    } \r\n}\r\n\r\nexport const addMessage = (messageBody) => {\r\n    return {type: ADD_MESSAGE, newMessageText: messageBody};\r\n}\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_list\":\"Users_user_list__1U5s4\"};","module.exports = __webpack_public_path__ + \"static/media/userAvatar.381ec006.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.ec28acd5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activePage\":\"Paginator_activePage__3wkKv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"incorectData\":\"Login_incorectData__1QCu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__8-EDM\",\"item\":\"Navbar_item__2MeD1\",\"activeLink\":\"Navbar_activeLink__ow3Ge\",\"settings\":\"Navbar_settings__llQE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_block\":\"User_user_block__mJFib\",\"userFirst\":\"User_userFirst__1zHoy\",\"userAvatar\":\"User_userAvatar__2PvFp\",\"user__name\":\"User_user__name__2KWaT\",\"btn\":\"User_btn__2LwpX\",\"user__info\":\"User_user__info__rNd0d\",\"user__info_left\":\"User_user__info_left__1vYoV\",\"user__info_right\":\"User_user__info_right__1XZya\"};","import axios from 'axios';\r\n\r\n// axios instance\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {'API-KEY': 'e2dd59c9-366a-4705-bbf0-f5a55b8408d5'}\r\n});\r\n\r\n// object with api\r\nexport const dataAPI = {\r\n  // отримати сторінку користувачів\r\n  getUsers(pageNumber, usersCount) {\r\n    return instance.get(`users?page=${pageNumber}&count=${usersCount}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  // отримати сторінку з користувачами\r\n  getUsersPage(pageNumber, usersCount) {\r\n    return instance.get(`users?page=${pageNumber}&count=${usersCount}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  // отримати інформацію про користувача\r\n  getUserProfile(userId) {\r\n    return instance.get(`profile/${userId}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  // стежити за користувачем\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`);\r\n  },\r\n\r\n  // нестежити за користувачем\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  // отримати статус користувача\r\n  getUserStatus(userID) {\r\n    return instance.get(`profile/status/${userID}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n\r\n  // оновити статус користувача\r\n  updateUserStatus(status) {\r\n    return instance\r\n      .put(`profile/status`, {\r\n        status: status,\r\n      })\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  // перевірка на авторизованість\r\n  auth() {\r\n    return instance.get(`/auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`/auth/login`, { email, password, rememberMe });\r\n  },\r\n  logout() {\r\n    return instance.delete(`/auth/login`);\r\n  },\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './FriendItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst FriendItem = (props) => {\r\n    return (\r\n        <div className={s.friend_item}>\r\n            <div className={s.avatar} >\r\n                <img alt=\"friend-img\" src='https://media.gettyimages.com/photos/woman-lifts-her-arms-in-victory-mount-everest-national-park-picture-id507910624?s=612x612'></img>\r\n            </div>\r\n            <div>\r\n                <NavLink to='#f'>{props.name}</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendItem;","import React from 'react';\r\nimport s from './Sidebar.module.css';\r\n\r\nimport FriendItem from './FriendItem/FriendItem';\r\n\r\n\r\n\r\nconst Sidebar = (props) => {\r\n    \r\n    let friendsElements = props.friends.map((friend) => <FriendItem id={friend.id} name={friend.name} />)\r\n\r\n    return (\r\n        <div className={s.sidebar_block}>\r\n            <h2>Friends</h2>\r\n            <div className={s.friends_block}>\r\n                {friendsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","//import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Sidebar from './Sidebar';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.sidebar.friends\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\nconst SidebarContainer = connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n\r\nexport default SidebarContainer;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport SidebarContainer from './Sidebar/SidebarContainer';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Find users</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.settings}`}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n\r\n            <SidebarContainer />\r\n\r\n        </nav>);\r\n}\r\n\r\nexport default Navbar;","import {stopSubmit} from 'redux-form';\r\nimport {authAPI} from '../api/api';\r\n\r\nconst SET_USER_DATA = 'header/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isLogined: false,\r\n};\r\n\r\nconst headerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isLogined: action.payload.isAuth,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setUserData = (id, email, login, isAuth) => {\r\n    return {type: SET_USER_DATA, payload: {id, email, login, isAuth}};\r\n};\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.auth();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(\r\n            setUserData(\r\n                response.data.data.id,\r\n                response.data.data.email,\r\n                response.data.data.login,\r\n                true,\r\n            )\r\n        );\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData());\r\n        } else {\r\n            let errorText = response.data.resultCode ? response.data.messages[0] : 'Some error';\r\n            let action = stopSubmit('login', {_error: errorText});\r\n            dispatch(action);\r\n        };\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserData(null, null, null, false));\r\n        };\r\n};\r\n\r\nexport default headerReducer;\r\n","import { authAPI } from './../api/api';\r\nimport { getAuthUserData } from './header-reducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INITIALIZED_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => {\r\n  return {\r\n    type: INITIALIZED_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const initialize = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","\r\n// для follow / unfollow\r\nexport const followUnfollow = (users, userId, followOrUnfollow) => {\r\n    const newArray = users.map((user) => {\r\n        if (user.id === userId) {\r\n            return {...user, followed: followOrUnfollow};\r\n        }\r\n        return user;\r\n    });\r\n\r\n    return newArray;\r\n}","import {dataAPI} from '../api/api';\r\nimport {followUnfollow} from \"../utils/reducers-helper\";\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_PAGE = 'users/SET_PAGE';\r\nconst SET_USERS_COUNT = 'users/SET_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING = 'users/TOGGLE_FOLLOWING';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageNumber: 1,\r\n    usersCount: 5,\r\n    totalUsersCount: 0,\r\n    isFetching: false,\r\n    isFollowingProc: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: followUnfollow(state.users, action.userId, true)\r\n            };\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: followUnfollow(state.users, action.userId, false)\r\n            };\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users,\r\n            };\r\n        }\r\n        case SET_PAGE: {\r\n            return {\r\n                ...state,\r\n                pageNumber: action.page,\r\n            };\r\n        }\r\n        case SET_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.usersCount,\r\n            };\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            };\r\n        }\r\n        case TOGGLE_FOLLOWING: {\r\n            return {\r\n                ...state,\r\n                isFollowingProc: action.isFetching\r\n                    ? [...state.isFollowingProc, action.id]\r\n                    : state.isFollowingProc.filter((id) => id !== action.id),\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (id) => {\r\n    return {type: FOLLOW, userId: id};\r\n};\r\n\r\nexport const unfollowSuccess = (id) => {\r\n    return {type: UNFOLLOW, userId: id};\r\n};\r\n\r\nexport const set_users = (users) => {\r\n    return {type: SET_USERS, users};\r\n};\r\n\r\nexport const set_page = (page) => {\r\n    return {type: SET_PAGE, page};\r\n};\r\n\r\nexport const set_users_count = (usersCount) => {\r\n    return {type: SET_USERS_COUNT, usersCount};\r\n};\r\n\r\nexport const toggle_is_fetching = (isFetching) => {\r\n    return {type: TOGGLE_IS_FETCHING, isFetching};\r\n};\r\n\r\nexport const toggle_following_proc = (isFetching, id) => {\r\n    return {type: TOGGLE_FOLLOWING, isFetching, id};\r\n};\r\n\r\n//////////////////////////////////////////////////////////////// Thunk\r\n\r\nexport const getUsers = (pageNumber, usersCount) => async (dispatch) => {\r\n    dispatch(toggle_is_fetching(true));\r\n    dispatch(set_page(pageNumber));\r\n    let response = await dataAPI.getUsers(pageNumber, usersCount)\r\n    dispatch(toggle_is_fetching(false));\r\n    dispatch(set_users(response.items));\r\n    dispatch(set_users_count(response.totalCount));\r\n};\r\n\r\n// закоментував, бо це запити на сервер (я не проплатив акаунт ще)\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(toggle_following_proc(true, userId));\r\n    //let response = await dataAPI.follow(userId);\r\n    // if (response.data.resultCode === 0) {\r\n    dispatch(followSuccess(userId));\r\n    // }\r\n    dispatch(toggle_following_proc(false, userId));\r\n};\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(toggle_following_proc(true, userId));\r\n    //let response =  await dataAPI.unfollow(userId);\r\n    //  if (response.data.resultCode === 0) {\r\n    dispatch(unfollowSuccess(userId));\r\n    //  }\r\n    dispatch(toggle_following_proc(false, userId));\r\n};\r\n\r\nexport default usersReducer;\r\n","export const getUsersPage = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getPageNumber = (state) => {\r\n  return state.usersPage.pageNumber;\r\n};\r\n\r\nexport const getUsersCount = (state) => {\r\n  return state.usersPage.usersCount;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getIsFollowingProc = (state) => {\r\n  return state.usersPage.isFollowingProc;\r\n};\r\n","import React from 'react';\r\nimport s from './User.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport userAvartar from './../../../assets/images/userAvatar.jpg';\r\n\r\nconst User = ({userPrep, isFollowingProc, unfollow, follow}) => {\r\n  return (\r\n    <div className={s.user_block}>\r\n      <div className={s.userFirst}>\r\n        <NavLink to={`/profile/${userPrep.id}`}>\r\n          {/*/////////////////*/}\r\n          <img\r\n            alt=\"avatar\"\r\n            className={s.userAvatar}\r\n            src={userPrep.photos.small != null ? userPrep.photos.small : userAvartar}\r\n          />\r\n        </NavLink>\r\n        {userPrep.followed ? (\r\n          <button\r\n            disabled={isFollowingProc.some((id) => id === userPrep.id)}\r\n            onClick={() => {\r\n              unfollow(userPrep.id);\r\n            }}\r\n            className={s.btn}>\r\n            Unfollow\r\n          </button>\r\n        ) : (\r\n          <button\r\n            disabled={isFollowingProc.some((id) => id === userPrep.id)}\r\n            onClick={() => {\r\n              follow(userPrep.id);\r\n            }}\r\n            className={s.btn}>\r\n            Follow\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className={s.user__info}>\r\n        <div className={s.user__info_left}>\r\n          <h2>\r\n            <span className={s.user__name}>{userPrep.name}</span>\r\n            <span>{userPrep.surname}</span>\r\n          </h2>\r\n          <p className={s.user__status}>{userPrep.status}</p>\r\n        </div>\r\n        <div className={s.user__info_right}>\r\n          <p className={s.user__country}>{/*props.userPrep.location.country*/}</p>\r\n          <p className={s.user__city}>{/*props.userPrep.location.city*/}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, {useState} from \"react\";\r\nimport s from \"../Paginator/Paginator.module.css\";\r\n\r\nconst Paginator = ({totalItemsCount, itemsCountOnPage, countOfPagesOnPage = 10, pageNumber, pageChanged}) => {\r\n\r\n    let countOfPages = Math.ceil(totalItemsCount / itemsCountOnPage)\r\n\r\n    let [pagesBlock, setPagesBlock] = useState(1);\r\n\r\n    let lastPageNumber = pagesBlock * countOfPagesOnPage;\r\n    let firstPageNumber = lastPageNumber - countOfPagesOnPage + 1;\r\n\r\n    const nextPage = () => {\r\n        setPagesBlock(pagesBlock + 1);\r\n    }\r\n    const prevPage = () => {\r\n        setPagesBlock(pagesBlock - 1);\r\n    }\r\n\r\n    let arrOfPages = new Array(countOfPages);\r\n\r\n    let pages = arrOfPages.fill(1).map((_, index) => index + 1).slice(firstPageNumber - 1, lastPageNumber).map(u =>\r\n        <span\r\n            className={(pageNumber === u) ? s.activePage : \"\"/*????????*/}\r\n            onClick={() => {\r\n                pageChanged(u)\r\n            }}>{u}</span>)\r\n\r\n    return <div>\r\n        {(pagesBlock * countOfPagesOnPage > countOfPagesOnPage) && <button onClick={() => prevPage()}>Prev</button>}\r\n        {pages}\r\n        {(pagesBlock * countOfPagesOnPage < countOfPages) && <button onClick={() => nextPage()}>Next</button>}\r\n    </div>\r\n\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport User from './User/User';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nconst Users = (props) => {\r\n\r\n    let listOfUsers = props.users.map(u =>\r\n        <User\r\n            follow={props.follow}\r\n            unfollow={props.unfollow}\r\n            isFollowingProc={props.isFollowingProc}\r\n            key={u.id}\r\n            userPrep={u}\r\n        />)\r\n\r\n    return (\r\n            <div className={s.user_list}>\r\n                <Paginator pageNumber={props.pageNumber} pageChanged={props.pageChanged}\r\n                           totalItemsCount={props.totalUsersCount} itemsCountOnPage={props.usersCount} countOfPagesOnPage={10}/>\r\n                <div>\r\n                    {listOfUsers}\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    followSuccess,\r\n    unfollowSuccess,\r\n    getUsers,\r\n    toggle_following_proc,\r\n    follow,\r\n    unfollow,\r\n} from '../../redux/users-reducer';\r\nimport {\r\n    getIsFetching,\r\n    getIsFollowingProc,\r\n    getPageNumber,\r\n    getTotalUsersCount,\r\n    getUsersCount,\r\n    getUsersPage,\r\n} from '../../redux/users-selectors';\r\n\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n// Library React-Redux (mapStateToProps dispatch connect())\r\n\r\nclass UsersContainerAPI extends React.Component {\r\n    componentDidMount() {\r\n        let {pageNumber, usersCount} = this.props;\r\n        this.props.getUsers(pageNumber, usersCount);\r\n    }\r\n\r\n    // зміна номеру сторінки з юзерами\r\n    pageChanged = (pageNumber) => {\r\n        let {usersCount} = this.props;\r\n        this.props.getUsers(pageNumber, usersCount);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n\r\n                <Users {...this.props}\r\n                       pageChanged={this.pageChanged}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersPage(state),\r\n        pageNumber: getPageNumber(state),\r\n        usersCount: getUsersCount(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowingProc: getIsFollowingProc(state),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    followSuccess,\r\n    unfollowSuccess,\r\n    toggle_following_proc,\r\n    getUsers,\r\n    follow,\r\n    unfollow,\r\n})(UsersContainerAPI);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\n// хедерна компонента відображає логотип, і статус логування\r\nconst Header = (props) => {\r\n  return (\r\n    <header className={s.header}>\r\n      <img\r\n        src=\"https://www.logo.wine/a/logo/PlayStation/PlayStation-Logo.wine.svg\"\r\n        alt=\"logo\"></img>\r\n      <div className={s.logining}>\r\n        {props.isLogined ? (\r\n          <div>\r\n            <span>{props.login}</span>\r\n            <button onClick={props.logout}>Logout</button>\r\n          </div>\r\n        ) : (\r\n          <NavLink to=\"/login\" className={s.login}>\r\n            Login\r\n          </NavLink>\r\n        )}\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { logout } from '../../redux/header-reducer';\r\nimport Header from './Header';\r\n\r\nclass HeaderContainer extends React.Component {\r\n  componentDidMount() {\r\n    // перевірка на те чи користувач авторизований\r\n    //this.props.authAutorize();\r\n  }\r\n\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isLogined: state.auth.isLogined,\r\n    login: state.auth.login,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  //authAutorize,\r\n  logout,\r\n})(HeaderContainer);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { login } from '../../redux/header-reducer';\r\nimport { maxLengthCreator, requiredField } from '../../utils/validators/validator';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport style from './Login.module.css';\r\n\r\nlet maxLength25 = maxLengthCreator(25);\r\n\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name={'email'}\r\n          placeholder={'email'}\r\n          validate={[requiredField, maxLength25]}\r\n          component={Input}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field\r\n          name={'password'}\r\n          placeholder={'password'}\r\n          validate={[requiredField, maxLength25]}\r\n          component={Input}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Field component={Input} name={'rememberMe'} type={'checkbox'} /> remember me\r\n      </div>\r\n      {props.error && <div className={style.incorectData}>{props.error}</div>}\r\n      <button type={'submit'}>Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\n// контейнер redux-form\r\nlet ReduxLoginForm = reduxForm({\r\n  form: 'login',\r\n})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (values) => {\r\n    props.login(values.email, values.password, values.rememberMe);\r\n  };\r\n\r\n  if (props.isLogined) {\r\n    return <Redirect to=\"/profile\" />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <ReduxLoginForm onSubmit={onSubmit} />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLogined: state.auth.isLogined,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","let initialState = {\r\n    friends: [\r\n        { id: 1, name: 'Mot' },\r\n        { id: 2, name: 'Tic' },\r\n        { id: 3, name: 'Dartonian' }\r\n    ]\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport thunkMiddlewayer from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport headerReducer from './header-reducer';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: headerReducer,\r\n  app: appReducer,\r\n\r\n  // для redux-form\r\n  form: formReducer,\r\n});\r\n\r\n// для Redux плагіна\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddlewayer)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddlewayer));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nconst withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return (<React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>)\r\n    }\r\n}\r\n\r\nexport default withSuspense;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\n\n\nimport {initialize} from './redux/app-reducer';\nimport UsersContainer from './components/Users/UsersContainer';\n\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport {connect, Provider} from 'react-redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from \"./redux/redux-store\";\nimport withSuspense from \"./hoc/withSuspense\";\n\n// React.lazy()\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initialize();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>;\n        }\n\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navbar store={this.props.store}/>\n                <div className=\"app-wrapper-content\">\n                    <Route path=\"/profile/:userID?\" render={withSuspense(ProfileContainer)}/>\n                    <Route exact path=\"/dialogs\" render={withSuspense(DialogsContainer)} />\n\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route path=\"/login\" render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized,\n    };\n};\n\nconst AppWithConnect = connect(mapStateToProps, {initialize})(App);\n\nconst MainApp = (props) => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <AppWithConnect/>\n            </Provider>\n        </BrowserRouter>\n    )\n}\n\nexport default MainApp;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport MainApp from \"./App\";\n\nReactDOM.render(\n    <MainApp/>\n    ,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.svg';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img alt=\"preloader\" src={preloader} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControll\":\"FormsControls_formControll__3hB0Y\",\"error\":\"FormsControls_error__39wOD\"};","export const requiredField = (value) => {\r\n  return !value ? 'Required field' : undefined;\r\n};\r\n\r\nexport const maxLengthCreator = (count) => (value) => {\r\n  return value && value.length < count ? undefined : `Must be text less then ${count} signs`;\r\n};\r\n","import React from 'react';\r\nimport s from './FormsControls.module.css';\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  let hasError = meta.error && meta.touched;\r\n  return (\r\n    <div className={`${s.formControll} ${hasError ? s.error : ''}`}>\r\n      <textarea {...input} {...props} type=\"textarea\" />\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n  let hasError = meta.error && meta.touched;\r\n  return (\r\n    <div className={`${s.formControll} ${hasError ? s.error : ''}`}>\r\n      <input {...input} {...props} />\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3gpvX\",\"login\":\"Header_login__1ghWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar_block\":\"Sidebar_sidebar_block__2bvp2\",\"friends_block\":\"Sidebar_friends_block__3XSQe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"FriendItem_avatar__2J5Yg\",\"friend_item\":\"FriendItem_friend_item__3hwzL\"};"],"sourceRoot":""}