{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem.jsx/DialogItem.module.css","components/Dialogs/Message.jsx/Message.module.css","components/Dialogs/DialogItem.jsx/DialogItem.jsx","components/Dialogs/Message.jsx/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","alt","src","to","id","name","Message","message","maxLength50","maxLengthCreator","ReduxAddMessageForm","reduxForm","form","onSubmit","handleSubmit","new_message","Field","component","Textarea","validate","requiredField","placeholder","btn_green","Dialogs","dialogsElements","dialogs","map","messagesElements","messages","dialogs_items","values","addMessage","messageBody","mapStateToPropsForRedirect","state","isLogined","auth","withAuthRedirect","Component","AuthRedirect","this","React","connect","compose","dialogsPage"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,SAAW,0BAA0B,YAAc,6BAA6B,UAAY,6B,oBCAhMD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,2B,wGCcbC,EATI,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAEC,QACd,yBAAKC,IAAI,cAAcC,IAAI,mIAC3B,kBAAC,IAAD,CAASC,GAAI,YAAcN,EAAMO,IAAKP,EAAMQ,Q,kBCEzCC,EARC,SAACT,GACb,OACI,yBAAKC,UAAWC,IAAEQ,SACbV,EAAMU,U,kCCwBfC,EAAcC,YAAiB,IAoB7BC,EAAsBC,YAAU,CACpCC,KAAM,oBADoBD,EAlBL,SAACd,GACtB,OACE,0BAAMgB,SAAUhB,EAAMiB,aAAchB,UAAWC,IAAEgB,aAC/C,6BACE,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXb,KAAM,cACNc,SAAU,CAACC,IAAeZ,GAC1Ba,YAAa,2BAGjB,6BACE,4BAAQvB,UAAWC,IAAEuB,WAArB,aAUOC,EA/CC,SAAC1B,GACf,IAAI2B,EAAkB3B,EAAM4B,QAAQC,KAAI,SAAC1B,GAAD,OACtC,kBAAC,EAAD,CAAYK,KAAML,EAAOK,KAAMD,GAAIJ,EAAOI,QAGxCuB,EAAmB9B,EAAM+B,SAASF,KAAI,SAACnB,GAAD,OAAa,kBAAC,EAAD,CAASA,QAASA,EAAQA,aAMjF,OACE,yBAAKT,UAAWC,IAAE0B,SAChB,yBAAK3B,UAAWC,IAAE8B,eAAgBL,GAClC,yBAAK1B,UAAWC,IAAE6B,UAChB,6BAAMD,GAEN,kBAACjB,EAAD,CAAqBG,SAVT,SAACiB,GACjBjC,EAAMkC,WAAWD,EAAOE,mB,wDCXtBC,EAA6B,SAACC,GAChC,MAAO,CACHC,UAAWD,EAAME,KAAKD,YAoBfE,EAdU,SAACC,GAAe,IAC/BC,EAD8B,uKAG5B,OAAIC,KAAK3C,MAAMsC,UACR,kBAACG,EAAcE,KAAK3C,OADM,kBAAC,IAAD,CAAUM,GAAG,eAHlB,GACTsC,IAAMH,WAO7BD,EAAmBK,YAAQT,EAARS,CAAoCH,GAE3D,OAAOF,G,OCHIM,sBACXD,aAVoB,SAACR,GACrB,MAAO,CACHT,QAASS,EAAMU,YAAYnB,QAC3BG,SAAUM,EAAMU,YAAYhB,YAOP,CAACG,iBAC1BM,EAFWM,CAGbpB","file":"static/js/4.6c0121ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3ZEXm\",\"dialogs_items\":\"Dialogs_dialogs_items__2GWtd\",\"messages\":\"Dialogs_messages__1032G\",\"new_message\":\"Dialogs_new_message__zn-iU\",\"btn_green\":\"Dialogs_btn_green__3Lzxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2Arfg\",\"active\":\"DialogItem_active__30TwM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3aFDQ\"};","import React from 'react';\r\nimport s from './DialogItem.module.css'\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img alt=\"dialog-item\" src='https://media.gettyimages.com/photos/woman-lifts-her-arms-in-victory-mount-everest-national-park-picture-id507910624?s=612x612' />\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem.jsx/DialogItem';\r\nimport Message from './Message.jsx/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, requiredField } from '../../utils/validators/validator';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.dialogs.map((dialog) => (\r\n    <DialogItem name={dialog.name} id={dialog.id} />\r\n  ));\r\n\r\n  let messagesElements = props.messages.map((message) => <Message message={message.message} />);\r\n\r\n  const addMesage = (values) => {\r\n    props.addMessage(values.messageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogs_items}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n\r\n        <ReduxAddMessageForm onSubmit={addMesage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} className={s.new_message}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name={'messageBody'}\r\n          validate={[requiredField, maxLength50]}\r\n          placeholder={'    new message . . .'}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className={s.btn_green}>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ReduxAddMessageForm = reduxForm({\r\n  form: 'dialogAddMessage',\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\n// об'єкт з інформацією про те чи користувач залогінений\r\nconst mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isLogined: state.auth.isLogined\r\n    }\r\n}\r\n\r\n// Хок, який приймає компоненту і повертає модифіковану компоненту. В даному випадку потрібен\r\n// щоб виконувати редірект, якщо користувач не залогінений\r\nconst withAuthRedirect = (Component) => {\r\n    class AuthRedirect extends React.Component {\r\n        render () {\r\n            if(!this.props.isLogined) return <Redirect to='/login' />\r\n            return <Component {...this.props}/>\r\n        }       \r\n    }\r\n    // обертаю коннектом, щоб прокинути інформацію про логування\r\n    let withAuthRedirect = connect(mapStateToPropsForRedirect)(AuthRedirect);\r\n\r\n    return withAuthRedirect;\r\n}\r\n\r\n\r\nexport default withAuthRedirect;","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\n\r\nimport { addMessage } from './../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\n\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n    \r\n}\r\n\r\n// it`s compose function from Redux\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}