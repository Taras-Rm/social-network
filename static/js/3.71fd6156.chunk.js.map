{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","profile_status_block","value","onFocus","e","target","onBlur","updateUserStatus","onChange","onClick","ProfileInfo","activeProfile","profile_block","walpaper","src","alt","profile_description","avatar","photos","small","profile_info","fullName","ProfileStatusWithHooks","Preloader","Post","message","likeCount","item","img_text","post_text","about_like","like","MyPosts","React","memo","postsElements","posts","map","post","header_posts","ReduxAddPostForm","onSubmit","values","addPost","postText","old_posts","maxLength30","maxLengthCreator","reduxForm","form","handleSubmit","new_post","Field","type","name","validate","requiredField","placeholder","component","Textarea","btn_green","Profile","profile","ProfileContainerAPI","userId","this","match","params","userID","id","history","push","getUserProfileInfo","getUserStatus","Component","compose","connect","state","profilePage","auth","withRouter"],"mappings":"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","file":"static/js/3.71fd6156.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"walpaper\":\"ProfileInfo_walpaper__DalGl\",\"profile_description\":\"ProfileInfo_profile_description__3Hpb8\",\"avatar\":\"ProfileInfo_avatar__1uQni\",\"profile_info\":\"ProfileInfo_profile_info__q5Rtg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__17bP4\",\"new_post\":\"MyPosts_new_post__1IDG6\",\"btn_green\":\"MyPosts_btn_green__AFyj7\",\"old_posts\":\"MyPosts_old_posts__n_Uto\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3VYel\",\"post_text\":\"Post_post_text__2FCqj\",\"img_text\":\"Post_img_text__1TSik\",\"about_like\":\"Post_about_like__Jf5Eu\",\"like\":\"Post_like__fJRJr\"};","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatus = (props) => {\r\n    // встановити режим редагування\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n\r\n    // вимкнути режим редагування\r\n    const unsetEditMode = () => {\r\n        setEditMode(false);\r\n        // Оновлення статусу (запит на сервер)\r\n        props.updateUserStatus(status);//   оновлення статусу (обмежене АРІ сервера)!!!!!\r\n    }\r\n\r\n    const onInputChange = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    // при фокусі інпута виділити весь текст\r\n    const handleFocus = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n        return (\r\n            <div className={s.profile_status_block}>\r\n                {/* відобразити спан (статус), якщо режим редагування вимкнений, інакше відобразити інпут*/}\r\n                {!editMode ?\r\n                    <div>\r\n                        <span onClick={() => setEditMode(true)}>{status || \"Without status\"}</span>\r\n                    </div> :\r\n                    <div>\r\n                        <input value={status} onFocus={handleFocus} onBlur={unsetEditMode} onChange={onInputChange}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({activeProfile, status, updateUserStatus}) => {\r\n    if(!activeProfile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile_block}>\r\n            <div>\r\n                <img className={s.walpaper} src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTHnHamnGAQO6byapKIZIp-6TZNYZksh2x3MQ&usqp=CAU\" alt=\"phon-nature\"></img>\r\n            </div>\r\n            <div className={s.profile_description}>\r\n                <img className={s.avatar} src={activeProfile.photos.small} alt=\"ava\"></img>\r\n                <div className={s.profile_info}>\r\n                    <span>{!activeProfile ? 'Tom K.' : activeProfile.fullName}</span>\r\n                    <p>Date of Birth: 2 january<br />City:Minsk<br />Education: 11<br />Web-site: fhdsjfhdjfh</p>\r\n                </div>\r\n                <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = ({message, likeCount}) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.img_text}>\r\n                <img alt=\"post-img\" src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRXsLeJKDYJHrXLzatUHAKE1WFxzn0jcuuG3g&usqp=CAU' />\r\n                <div className={s.post_text}>\r\n                    {message}\r\n                </div>\r\n            </div>\r\n            <div className={s.about_like}>\r\n                <img alt=\"like-img\" className={s.like} src='https://lh3.googleusercontent.com/i0mKBU9rHdZX1UOb6OOGIQ3HJweX2__QGYUW8bzaiVfg32KaXdPoDLnvcFfrhFHjYIQ' />\r\n                <span>Like</span> {likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, requiredField} from '../../../utils/validators/validator';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Textarea} from './../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements = props.posts.map((post) => (\r\n        <Post message={post.message} likeCount={post.likeCount}/>\r\n    ));\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.postText);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={s.posts}>\r\n            <h2 className={s.header_posts}>My posts</h2>\r\n\r\n            <ReduxAddPostForm onSubmit={addPost}/>\r\n\r\n            <div className={s.old_posts}>{postsElements}</div>\r\n        </div>)\r\n\r\n\r\n});\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.new_post}>\r\n            <Field\r\n                type=\"text\"\r\n                name={'postText'}\r\n                validate={[requiredField, maxLength30]}\r\n                placeholder=\"     your news ...\"\r\n                component={Textarea}\r\n            />\r\n\r\n            <button className={s.btn_green}>Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst ReduxAddPostForm = reduxForm({\r\n    form: 'post',\r\n})(AddPostForm);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPosts from './MyPosts/MyPosts';\r\n\r\nconst Profile = ({activeProfile, status, updateUserStatus, posts, addPost}) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo activeProfile={activeProfile} status={status} updateUserStatus={updateUserStatus}/>\r\n            <MyPosts posts={posts}\r\n                addPost={addPost} />\r\n        </div>);\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Profile from './Profile';\r\nimport {\r\n    addPost,\r\n    getUserProfileInfo,\r\n    getUserStatus,\r\n    updateUserStatus,\r\n} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainerAPI extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userID;\r\n        if (!userId) {\r\n            userId = this.props.id;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        // завантажити інформацію користувача\r\n        this.props.getUserProfileInfo(userId);\r\n\r\n        // завантажити статус користувача\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        activeProfile: state.profilePage.activeProfile,\r\n        status: state.profilePage.status,\r\n        id: state.auth.id,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addPost, getUserProfileInfo, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n)(ProfileContainerAPI);\r\n"],"sourceRoot":""}